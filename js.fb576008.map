{"version":3,"sources":["js/cards.js","js/index.js"],"names":["cards","name","lastUsed","Date","getTime","creationDate","img","listOfCards","document","getElementById","backet","button","clear","createMarkup","markup","map","arrayOfCards","i","length","push","insertAdjacentHTML","join","onClickToSelect","event","forEach","element","target","id","markupSelectedCards","arrayOfSelectedCards","byField","a","b","onClickSort","destroyCards","sort","innerHTML","onClear","addEventListener"],"mappings":";AAAO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,MAAMA,EAAQ,QAAA,MAAA,CACnB,CAAEC,KAAM,SAAUC,UAAU,IAAIC,MAAOC,UAAWC,cAAc,IAAIF,MAAOC,UAAWE,IAAK,2DAC3F,CAAEL,KAAM,SAAUC,UAAU,IAAIC,MAAOC,UAAWC,cAAc,IAAIF,MAAOC,UAAWE,IAAK,2DAC3F,CAAEL,KAAM,SAAUC,UAAU,IAAIC,MAAOC,UAAWC,cAAc,IAAIF,MAAOC,UAAWE,IAAK,2DAC3F,CAAEL,KAAM,SAAUC,UAAU,IAAIC,MAAOC,UAAWC,cAAc,IAAIF,MAAOC,UAAWE,IAAK,2DAC3F,CAAEL,KAAM,SAAUC,UAAU,IAAIC,MAAOC,UAAWC,cAAc,IAAIF,MAAOC,UAAWE,IAAK,2DAC3F,CAAEL,KAAM,SAAUC,UAAU,IAAIC,MAAOC,UAAWC,cAAc,IAAIF,MAAOC,UAAWE,IAAK,2DAC3F,CAAEL,KAAM,SAAUC,UAAU,IAAIC,MAAOC,UAAWC,cAAc,IAAIF,MAAOC,UAAWE,IAAK,2DAC3F,CAAEL,KAAM,SAAUC,UAAU,IAAIC,MAAOC,UAAWC,cAAc,IAAIF,MAAOC,UAAWE,IAAK;;ACR7F,aAEA,IAAA,EAAA,QAAA,WAEA,MAAMC,EAAcC,SAASC,eAAe,QACtCC,EAASF,SAASC,eAAe,UACjCE,EAASH,SAASC,eAAe,QACjCG,EAAQJ,SAASC,eAAe,SAStC,SAASI,EAAab,GACZc,MAAAA,EAASd,EAAMe,IAAI,EAAGd,KAAAA,EAAMK,IAAAA,gCACHL,yDAA4DK,yFAMrFU,EAAe,GAEhB,IAAA,IAAIC,EAAI,EAAGA,EAAIjB,EAAMkB,OAAQD,GAAK,EACtBE,EAAAA,KAAKL,EAAOG,IAGjBG,EAAAA,mBAAmB,YAAaJ,EAAaK,KAAK,KAGlE,SAASC,EAAgBC,GACfC,EAAAA,MAAAA,QAASC,IACPF,GAAAA,EAAMG,OAAOC,KAAOF,EAAQxB,KAAM,CAC1BC,EAAAA,UAAW,IAAIC,MAAOC,UACxBwB,MAAAA,6BACqBH,EAAQxB,4DAA4DwB,EAAQnB,0GAKnGuB,IAAAA,EAAsB,GACLV,EAAAA,KAAKS,GACnBR,EAAAA,mBAAmB,aAAcS,EAAqBR,KAAK,QAK9E,SAASS,EAAQC,EAAGC,GACbD,GAAAA,EAAE7B,SAAW8B,EAAE9B,SACP,OAAC,EAGhB,SAAS+B,IACLC,IACalC,EAAAA,EAAMmC,MAAAA,KAAKL,IAG5B,SAASI,EAAaX,GACNa,EAAAA,UAAY,GAG5B,SAASC,IACED,EAAAA,UAAY,GAvDvB7B,EAAY+B,iBAAiB,QAAShB,GACtCX,EAAO2B,iBAAiB,QAASL,GACjCrB,EAAM0B,iBAAiB,QAASD,GAEhCxB,EAAab,EAAb","file":"js.fb576008.map","sourceRoot":"../src","sourcesContent":["export const cards = [\n  { name: \"card 1\", lastUsed: new Date().getTime(), creationDate: new Date().getTime(), img: 'https://cdn-icons-png.flaticon.com/512/3076/3076020.png'},\n  { name: \"card 2\", lastUsed: new Date().getTime(), creationDate: new Date().getTime(), img: 'https://cdn-icons-png.flaticon.com/512/3076/3076125.png'},\n  { name: \"card 3\", lastUsed: new Date().getTime(), creationDate: new Date().getTime(), img: 'https://cdn-icons-png.flaticon.com/512/3075/3075957.png'},\n  { name: \"card 4\", lastUsed: new Date().getTime(), creationDate: new Date().getTime(), img: 'https://cdn-icons-png.flaticon.com/512/3076/3076083.png'},\n  { name: \"card 5\", lastUsed: new Date().getTime(), creationDate: new Date().getTime(), img: 'https://cdn-icons-png.flaticon.com/512/3075/3075977.png'},\n  { name: \"card 6\", lastUsed: new Date().getTime(), creationDate: new Date().getTime(), img: 'https://cdn-icons-png.flaticon.com/512/3076/3076100.png'},\n  { name: \"card 7\", lastUsed: new Date().getTime(), creationDate: new Date().getTime(), img: 'https://cdn-icons-png.flaticon.com/512/3076/3076014.png'},\n  { name: \"card 8\", lastUsed: new Date().getTime(), creationDate: new Date().getTime(), img: 'https://cdn-icons-png.flaticon.com/512/2515/2515135.png'}, \n]","'use strict'\n\nimport {cards} from \"./cards\"\n\nconst listOfCards = document.getElementById(\"item\");\nconst backet = document.getElementById(\"backet\");\nconst button = document.getElementById(\"sort\");\nconst clear = document.getElementById(\"clear\");\n\n\nlistOfCards.addEventListener(\"click\", onClickToSelect);\nbutton.addEventListener(\"click\", onClickSort);\nclear.addEventListener(\"click\", onClear);\n\ncreateMarkup(cards);\n\nfunction createMarkup(cards) {\n    const markup = cards.map(({ name, img }) =>\n        `<li class =\"list\" id = \"${name}\" style=\"background: center / contain no-repeat url('${img}')\">\n            <div>\n                <p></p>\n            </div> \n        </li>`\n    );\n    const arrayOfCards = [];\n\n    for (let i = 0; i < cards.length; i += 1) {\n        arrayOfCards.push(markup[i]);\n    }\n\n    listOfCards.insertAdjacentHTML(\"beforeend\", arrayOfCards.join(\"\"));\n}\n\nfunction onClickToSelect(event) {\n    cards.forEach((element) => {\n        if (event.target.id === element.name) { \n            element.lastUsed = new Date().getTime();\n            const markupSelectedCards = \n            `<li class =\"list\" id = \"${element.name}\" style=\"background: center / contain no-repeat url('${element.img}')\">\n                <div>\n                    <p></p>\n                </div> \n            </li>`;\n            let arrayOfSelectedCards= [];\n            arrayOfSelectedCards.push(markupSelectedCards);\n            backet.insertAdjacentHTML(\"afterbegin\", arrayOfSelectedCards.join(\"\"));\n        }\n    })   \n}\n\nfunction byField(a, b) {\n    if(a.lastUsed > b.lastUsed){\n        return -1;\n    }\n}\nfunction onClickSort() {\n    destroyCards();\n    createMarkup(cards.sort(byField));\n}\n\nfunction destroyCards(event) {\n    listOfCards.innerHTML = '';\n}\n\nfunction onClear () {\n    backet.innerHTML = '';\n}"]}